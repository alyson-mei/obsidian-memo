{
  "edges": [
  ],
  "nodes": [
    {
      "height": 555,
      "id": "a9180a6960385195",
      "styleAttributes": {
      },
      "text": "### Repository\nРепозиторий создаёт абстракцию над хранилищем данных, предоставляя интерфейс. Скрывает детали получения, хранения и обработки запросов\n\n- Когда нужно отделить бизнес-логику от деталей доступа к данным\n- При необходимости лёгкого тестирования\n- При возможной смене источника данных (бд, API, файловая система)\n\n```\nИнтерфейс UserRepository:\n    - Получить(id)\n    - ПолучитьВсе()\n    - Добавить(объект)\n    - Обновить(объект)\n    - Удалить(id)\n```\n```",
      "type": "text",
      "width": 527,
      "x": -313,
      "y": -243
    },
    {
      "height": 555,
      "id": "24e6a8a576ce4443",
      "styleAttributes": {
      },
      "text": "### Unit of Work (Единица работы)\nОтслеживет все изменения, которые произошли во время бизнес-трнзкции, координирует запись изменений, решает проблемы параллелизма. Обеспечивает атомарность операций.\n\n- При необходимости обеспечения нескольких транзакций как одной атомарной транзакции\n- Когда нужно координировать работу нескольких репозиториев\n- При желание централизовать управление транзакциями\n\n```\nКласс UnitOfWork:\n    - Репозитории (пользователи, заказы, продукты...)\n    - НачатьТранзакцию()\n    - Зафиксировать()\n    - ОтменитьИзменения()\n```",
      "type": "text",
      "width": 495,
      "x": 214,
      "y": -243
    },
    {
      "height": 555,
      "id": "0827f2b0f7db789f",
      "styleAttributes": {
      },
      "text": "### Data Mapper (преобразователь данных)\nОбеспечивает передачу данных между хранилищем и объектами домена, сохраняя их независимость друг от друга\n\n- При работе со сложной доменной моделью\n- Когда структура базы данных отличается от структуры объектов в приложении\n- Для отделения логики доступа к БД от бизнес-логики\n\n```\nКласс UserMapper:\n    - ИзБазыВОбъект(строкаБД)\n    - ИзОбъектаВБазу(объектПользователя)\n```",
      "type": "text",
      "width": 514,
      "x": 709,
      "y": -243
    },
    {
      "height": 479,
      "id": "582659c51b2bc25a",
      "styleAttributes": {
      },
      "text": "### DTO (Data Transfer Object)\nОбъект без поведения, который служит для передачи данных между подсистемами приложения\n\n- При передаче данных через границы приложения (API, слои)\n- Для ограничения передаваемых данных (не все поля модели)\n- Для объединения данных из нескольких источников\n\n```\nКласс UserDTO:\n    - имя\n    - email\n    - роль\n    (без методов, только данные)\n```",
      "type": "text",
      "width": 524,
      "x": -313,
      "y": 312
    }
  ]
}