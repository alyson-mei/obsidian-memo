{
	"nodes":[
		{"id":"6159047847190b94","type":"text","text":"Stateful BasicItem\n\n\tfun BasicItem(  \n\t    onClose: () -> Unit,  \n\t    modifier: Modifier = Modifier,  \n\t    title: String = \"\",  \n\t    colorPrimary: Color = colorPrimaryF,  \n\t    colorSecondary: Color = colorSecondaryF  \n\t {\n\t var checkedState by rememberSaveable { mutableStateOf(false) }  \n\t var titleState by rememberSaveable { mutableStateOf(title) }\n\t...\n\t }","x":-493,"y":-659,"width":665,"height":396},
		{"id":"869b6abc256e90e7","type":"text","text":"Stateless BasicItem\n\n\tfun BasicItem(  \n\t    title: String,  \n\t    checked: Boolean,  \n\t    onCheckedChange: () -> Unit,  \n\t    onTextChange: (String) -> Unit,  \n\t    onClose: () -> Unit,  \n\t    modifier: Modifier = Modifier,  \n\t    colorPrimary: Color = colorPrimaryF,  \n\t    colorSecondary: Color = colorSecondaryF,  \n\t { ... }","x":-448,"y":-233,"width":576,"height":388},
		{"id":"82e0c4e5812104a1","type":"text","text":"Column of items\n\n\tfun ColumnOfItems(  \n\t    list: List<Todo>,  \n\t    onClose: (Todo) -> Unit,  \n\t    onButtonClick: () -> Unit,  \n\t    modifier: Modifier = Modifier  \n\t) { //just a Surface + LazyColumn ... }","x":-566,"y":-1042,"width":812,"height":266},
		{"id":"55b5b9c3fbfe189d","type":"text","text":"\tItemScreen\n\n\tfun ItemScreen(modifier: Modifier = Modifier) {  \n\t    Column(modifier = modifier) {  \n\t        val list = remember { getItems().toMutableStateList() }  \n\t        ColumnOfItems(  \n\t            list = list,  \n\t            onClose = { todo -> list.remove(todo) },  \n\t            onButtonClick = { list.add(Item(list.last().id + 1, \"Task # ${list.last().id + 1}\")) })  \n\t    }  \n\t}\n\n\tprivate fun getItems() = List(5) { i -> Item(i, \"Task # $i\")}","x":-528,"y":-1701,"width":736,"height":529},
		{"id":"41b65f918f3a750d","x":-566,"y":-2230,"width":812,"height":384,"type":"text","text":"ItemViewModel\n\t\n\tclass ItemViewModel: ViewModel() {  \n\t    private val _items = getItems().toMutableStateList()  \n\t    val items: List<Item>  \n\t        get() = _items  \n\t  \n\t    fun remove(item: Item) {  \n\t        _items.remove(item)  \n\t    }  \n\t  \n\t    fun add() {  \n\t        val id = _items.last().id + 1  \n\t        _items.add(Item(id, \"Task # $id\"))  \n\t    }  \n\t}"}
	],
	"edges":[
		{"id":"1861261a159c9f9a","fromNode":"869b6abc256e90e7","fromSide":"top","toNode":"6159047847190b94","toSide":"bottom"},
		{"id":"8a5c4753a9a4ef11","fromNode":"6159047847190b94","fromSide":"top","toNode":"82e0c4e5812104a1","toSide":"bottom"},
		{"id":"87ad1509000f2c8e","fromNode":"82e0c4e5812104a1","fromSide":"top","toNode":"55b5b9c3fbfe189d","toSide":"bottom"},
		{"id":"fd2b544d21a90534","fromNode":"55b5b9c3fbfe189d","fromSide":"right","toNode":"82e0c4e5812104a1","toSide":"right","label":"\n\n           data, onClose, onButtonClick"},
		{"id":"5fd90f0ae5f572e4","fromNode":"82e0c4e5812104a1","fromSide":"right","toNode":"6159047847190b94","toSide":"right","label":"onClose"},
		{"id":"ce18c444df79ab47","fromNode":"6159047847190b94","fromSide":"right","toNode":"869b6abc256e90e7","toSide":"right","label":"title, checked, \nonChecked, onClose"},
		{"id":"7d3c15d6f87f39ac","fromNode":"55b5b9c3fbfe189d","fromSide":"top","toNode":"41b65f918f3a750d","toSide":"bottom"},
		{"id":"f389701c5a2ae081","fromNode":"41b65f918f3a750d","fromSide":"right","toNode":"55b5b9c3fbfe189d","toSide":"right"}
	]
}